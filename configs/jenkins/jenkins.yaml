apiVersion: v1
kind: Namespace
metadata:
  name: jenkins
---
apiVersion: v1
kind: Secret
metadata:
  name: gcloud-cred
  namespace: jenkins
type: Opaque
data:
  host_name: ${GCLOUD_HOSTNAME_B64}
  project_name: ${GCLOUD_PROJECTNAME_B64}
  key_file: ${GCP_SA_KEY_B64}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: jenkins
  namespace: jenkins
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: jenkins-binding
subjects:
  - kind: ServiceAccount
    name: jenkins
    namespace: jenkins
roleRef:
  kind: ClusterRole
  name: cluster-admin
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jenkins
  namespace: jenkins
  labels:
    component: jenkins
spec:
  replicas: 1
  selector:
    matchLabels:
      component: jenkins
  template:
    metadata:
      labels:
        component: jenkins
    spec:
      serviceAccount: jenkins
      containers:
        - name: jenkins
          image: eu.gcr.io/michaelhaddon-223413/jenkins:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
            - containerPort: 50000
          env:
            - name: GCLOUD_HOSTNAME
              valueFrom:
                secretKeyRef:
                  name: gcloud-cred
                  key: host_name
            - name: GCLOUD_PROJECTNAME
              valueFrom:
                secretKeyRef:
                  name: gcloud-cred
                  key: project_name
          securityContext:
            privileged: true
          volumeMounts:
            - name: docker-sock
              mountPath: /var/run
            - name: gcloud-cred
              mountPath: "/root/.creds"
          livenessProbe:
            tcpSocket:
              port: 8080
            initialDelaySeconds: 60
            periodSeconds: 20
          readinessProbe:
            exec:
              command:
                - cat
                - /var/jenkins_started
            initialDelaySeconds: 5
            periodSeconds: 5
      volumes:
        - name: docker-sock
          hostPath:
            path: /var/run
        - name: gcloud-cred
          secret:
            secretName: gcloud-cred
            items:
              - key: key_file
                path: gcp_sa.key.json
---
apiVersion: v1
kind: Service
metadata:
  name: jenkins-svc
  namespace: jenkins
spec:
  type: LoadBalancer
  ports:
    - name: jenkins
      port: 80
      targetPort: 8080
    - name: jenkins-agent
      port: 50000
      targetPort: 50000
  selector:
    component: jenkins
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: jenkins-ingress
  namespace: jenkins
spec:
  backend:
    serviceName: jenkins-svc
    servicePort: 80